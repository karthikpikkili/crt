import os
import json
from collections import defaultdict

# File to store transactions
TRANSACTION_FILE = "transactions.json"

def load_transactions():
    if os.path.exists(TRANSACTION_FILE):
        with open(TRANSACTION_FILE, "r") as file:
            return json.load(file)
    else:
        return {"income": [], "expenses": []}

def save_transactions(transactions):
    with open(TRANSACTION_FILE, "w") as file:
        json.dump(transactions, file)

def add_income(transactions):
    category = input("Enter income category: ")
    amount = float(input("Enter income amount: "))
    transactions["income"].append({"category": category, "amount": amount})
    print("Income added successfully.")

def add_expense(transactions):
    category = input("Enter expense category: ")
    amount = float(input("Enter expense amount: "))
    transactions["expenses"].append({"category": category, "amount": amount})
    print("Expense added successfully.")

def calculate_budget(transactions):
    total_income = sum(transaction["amount"] for transaction in transactions["income"])
    total_expenses = sum(transaction["amount"] for transaction in transactions["expenses"])
    remaining_budget = total_income - total_expenses
    return total_income, total_expenses, remaining_budget

def analyze_expenses(transactions):
    expense_categories = defaultdict(float)
    for expense in transactions["expenses"]:
        expense_categories[expense["category"]] += expense["amount"]
    
    print("\nExpense Analysis:")
    for category, amount in expense_categories.items():
        print(f"{category}: ${amount:.2f}")

def main():
    transactions = load_transactions()
    while True:
        print("\n=== Budget Tracker ===")
        print("1. Add Income")
        print("2. Add Expense")
        print("3. View Budget")
        print("4. Analyze Expenses")
        print("5. Exit")
        choice = input("Enter your choice: ")

        if choice == "1":
            add_income(transactions)
        elif choice == "2":
            add_expense(transactions)
        elif choice == "3":
            total_income, total_expenses, remaining_budget = calculate_budget(transactions)
            print("\nBudget Summary:")
            print(f"Total Income: ${total_income:.2f}")
            print(f"Total Expenses: ${total_expenses:.2f}")
            print(f"Remaining Budget: ${remaining_budget:.2f}")
        elif choice == "4":
            analyze_expenses(transactions)
        elif choice == "5":
            save_transactions(transactions)
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please try again.")

if _name_ == "_main_":
    main()
